{"ast":null,"code":"var _jsxFileName = \"/Users/karthikkonyala/Documents/Projects/Wobble/client/src/components/profile-posts/ProfilePosts.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"../../components/spinner/Spinner.component\";\nimport PostCard from \"../../components/post-card/PostCard.component\";\nimport Paginator from \"../../components/paginator/Paginator.component\";\nimport { getUserPosts } from \"../../redux/posts/posts.actions\";\nimport usePaginator from \"../../hooks/usePaginator\";\nimport \"./ProfilePosts.styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfilePosts(_ref) {\n  _s();\n\n  let {\n    userId\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    posts,\n    loading\n  } = useSelector(state => state.posts);\n  const {\n    items,\n    currentPage,\n    perPage,\n    setCurrentPage\n  } = usePaginator(posts);\n  useEffect(() => {\n    dispatch(getUserPosts(userId));\n  }, [dispatch, userId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading && !items ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-height-spinner\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"posts\",\n      className: \"container\",\n      children: [items.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title full-screen\",\n        children: \"User hasn't posted anything yet !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: items.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Paginator, {\n        onChange: setCurrentPage,\n        current: currentPage,\n        pageSize: perPage,\n        total: posts.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ProfilePosts, \"HWXRz+z3Xx7q4ZqRy3z4uJajJbo=\", false, function () {\n  return [useDispatch, useSelector, usePaginator];\n});\n\n_c = ProfilePosts;\nexport default ProfilePosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePosts\");","map":{"version":3,"sources":["/Users/karthikkonyala/Documents/Projects/Wobble/client/src/components/profile-posts/ProfilePosts.component.jsx"],"names":["React","useEffect","useDispatch","useSelector","Spinner","PostCard","Paginator","getUserPosts","usePaginator","ProfilePosts","userId","dispatch","posts","loading","state","items","currentPage","perPage","setCurrentPage","length","map","post","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,QAAP,MAAqB,+CAArB;AACA,OAAOC,SAAP,MAAsB,gDAAtB;AAEA,SAASC,YAAT,QAA6B,iCAA7B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAO,2BAAP;;;;AAEA,SAASC,YAAT,OAAkC;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAChC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACF,KAAlB,CAAtC;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAAkDV,YAAY,CAACI,KAAD,CAApE;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,YAAY,CAACG,MAAD,CAAb,CAAR;AACD,GAFQ,EAEN,CAACC,QAAD,EAAWD,MAAX,CAFM,CAAT;AAIA,sBACE;AAAA,cACGG,OAAO,IAAI,CAACE,KAAZ,gBACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAKC;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,WAA9B;AAAA,iBACGA,KAAK,CAACI,MAAN,KAAiB,CAAjB,gBACC;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAyB,UAAA,IAAI,EAAEA;AAA/B,WAAeA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANJ,eAYE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAEJ,cADZ;AAEE,QAAA,OAAO,EAAEF,WAFX;AAGE,QAAA,QAAQ,EAAEC,OAHZ;AAIE,QAAA,KAAK,EAAEL,KAAK,CAACO;AAJf;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,mBADF;AA6BD;;GAtCQV,Y;UACUP,W,EACUC,W,EAC6BK,Y;;;KAHjDC,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Spinner from \"../../components/spinner/Spinner.component\";\nimport PostCard from \"../../components/post-card/PostCard.component\";\nimport Paginator from \"../../components/paginator/Paginator.component\";\n\nimport { getUserPosts } from \"../../redux/posts/posts.actions\";\nimport usePaginator from \"../../hooks/usePaginator\";\n\nimport \"./ProfilePosts.styles.css\";\n\nfunction ProfilePosts({ userId }) {\n  const dispatch = useDispatch();\n  const { posts, loading } = useSelector((state) => state.posts);\n  const { items, currentPage, perPage, setCurrentPage } = usePaginator(posts);\n\n  useEffect(() => {\n    dispatch(getUserPosts(userId));\n  }, [dispatch, userId]);\n\n  return (\n    <>\n      {loading && !items ? (\n        <div className=\"full-height-spinner\">\n          <Spinner />\n        </div>\n      ) : (\n        <section id=\"posts\" className=\"container\">\n          {items.length === 0 ? (\n            <h1 className=\"title full-screen\">\n              User hasn't posted anything yet !\n            </h1>\n          ) : (\n            <div className=\"columns is-multiline\">\n              {items.map((post) => (\n                <PostCard key={post._id} post={post} />\n              ))}\n            </div>\n          )}\n          <Paginator\n            onChange={setCurrentPage}\n            current={currentPage}\n            pageSize={perPage}\n            total={posts.length}\n          />\n        </section>\n      )}\n    </>\n  );\n}\n\nexport default ProfilePosts;\n"]},"metadata":{},"sourceType":"module"}